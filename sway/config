# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right m
# Your preferred terminal emulator
bindsym $mod+l exec ~/scripts/lock.sh

exec_always --no-startup-id swayidle -w \
  timeout 295 'notify-send "ðŸ”’ Locking in 5 seconds..."' \
  timeout 300 '~/scripts/lock.sh' \
  timeout 600 'sleep 3 && swaymsg "output * dpms off"' \
  timeout 720 'systemctl suspend' \
  resume 'swaymsg "output * dpms on"' \
  before-sleep '~/scripts/lock.sh'

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
bindsym $mod+p exec ~/scripts/wal-random.sh 

set $menu dmenu_path | wmenu | xargs swaymsg exec --
bindsym Print exec grim ~/Pictures/Screenshots/$(date +%Y-%m-%d-%H-%M-%S).png
include /etc/sway/config-vars.d/*
exec_always mako --config ~/.cache/wal/mako
exec_always mpDris2
exec pactl set-sink-mute @DEFAULT_SINK@ 0
### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /home/adem/Pictures/wallhaven-5gjg91.png fill
#source ~/.cache/wal/colors-sway
#output * bg $wallpaper fill


#source ~/.cache/wal/colors-sway
#output * bg $wallpaper fill
#output * bg ~/.cache/wal/wal fill
#exec_always "swaymsg output \"*\" bg \"$(cat ~/.cache/wal/wal)\" fill"
#output * bg /home/adem/Pictures/wallhaven-0p2vzm.jpg fill


#exec_always source ~/.cache/wal/colors-sway
#exec_always swaymsg output "*" bg "$(cat ~/.cache/wal/wal)" fill
# Load pywal colors and set wallpaper
exec_always bash -c 'source ~/.cache/wal/colors-sway && swaymsg output "*" bg "$(cat ~/.cache/wal/wal)" fill'



#

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
set $term kitty
### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill client

    # Start your launcher
    bindsym $mod+d exec wofi --show drun --style ~/.config/wofi/style.css
    #bindsym $mod+d exec ~/.config/wofi/pywal-wofi-launcher.sh $(cat ~/.cache/wal/wal)
    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal
exec_always --no-startup-id ~/.config/wofi/generate_wofi_css.py

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#

# Switch to workspace

# This is your $mod+1
bindsym $mod+ampersand workspace 1

# This is your $mod+2
bindsym $mod+eacute workspace 2

# This is your $mod+3
bindsym $mod+quotedbl workspace 3

# This is your $mod+4
bindsym $mod+apostrophe workspace 4

# This is your $mod+5
bindsym $mod+parenleft workspace 5

# This is your $mod+6
bindsym $mod+egrave workspace 6

# This is your $mod+7
bindsym $mod+underscore workspace 7

# This is your $mod+8
bindsym $mod+ccedilla workspace 8

# This is your $mod+9
bindsym $mod+parenright workspace 9

# This is your $mod+10
bindsym $mod+agrave workspace 10

# Move focused container to workspace

# Move to workspace 1
bindsym $mod+Shift+ampersand move container to workspace 1

# Move to workspace 2
bindsym $mod+Shift+eacute move container to workspace 2

# Move to workspace 3
bindsym $mod+Shift+quotedbl move container to workspace 3

# Move to workspace 4
bindsym $mod+Shift+apostrophe move container to workspace 4

# Move to workspace 5
bindsym $mod+Shift+parenleft move container to workspace 5

# Move to workspace 6
bindsym $mod+Shift+egrave move container to workspace 6

# Move to workspace 7
bindsym $mod+Shift+underscore move container to workspace 7

# Move to workspace 8
bindsym $mod+Shift+ccedilla move container to workspace 8

# Move to workspace 9
bindsym $mod+Shift+parenright move container to workspace 9

# Move to workspace 10
bindsym $mod+Shift+agrave move container to workspace 10

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen


    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
exec_always sh -c 'pkill -x waybar; sleep 0.5; waybar & sleep 0.5; waybar -c ~/.config/waybar/testconfig -s ~/.config/waybar/teststyle.css &'




include /etc/sway/config.d/*

  input type:keyboard {
       xkb_layout "fr"
       xkb_variant ""
       xkb_options "grp:alt_shift_toggle"
   }


input "type:keyboard" {
    xkb_numlock enabled
}


# Set gaps
gaps inner 8
include ~/.cache/wal/colors-sway


client.focused          $background $foreground $background $foreground
client.unfocused        $background $foreground $background $foreground
client.urgent           $color1     $foreground $color1     $foreground

  


# Titlebars off (Waybar replaces it)
default_border pixel 1
default_floating_border pixel 1

font pango:JetBrainsMono Nerd Font 10
